/**
 * @fileoverview gRPC-Web generated client stub for wallet_service
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.2
// source: wallet-service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var result_pb = require('./result_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.wallet_service = require('./wallet-service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.wallet_service.CoreWalletServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.wallet_service.CoreWalletServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet_service.CreateWalletRequest,
 *   !proto.wallet_service.WalletResponse>}
 */
const methodDescriptor_CoreWalletService_CreateWallet = new grpc.web.MethodDescriptor(
  '/wallet_service.CoreWalletService/CreateWallet',
  grpc.web.MethodType.UNARY,
  proto.wallet_service.CreateWalletRequest,
  proto.wallet_service.WalletResponse,
  /**
   * @param {!proto.wallet_service.CreateWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet_service.WalletResponse.deserializeBinary
);


/**
 * @param {!proto.wallet_service.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet_service.WalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet_service.WalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet_service.CoreWalletServiceClient.prototype.createWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet_service.CoreWalletService/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_CoreWalletService_CreateWallet,
      callback);
};


/**
 * @param {!proto.wallet_service.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet_service.WalletResponse>}
 *     Promise that resolves to the response
 */
proto.wallet_service.CoreWalletServicePromiseClient.prototype.createWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet_service.CoreWalletService/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_CoreWalletService_CreateWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.wallet_service.WalletListResponse>}
 */
const methodDescriptor_CoreWalletService_GetWallets = new grpc.web.MethodDescriptor(
  '/wallet_service.CoreWalletService/GetWallets',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.wallet_service.WalletListResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.wallet_service.WalletListResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.wallet_service.WalletListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.wallet_service.WalletListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet_service.CoreWalletServiceClient.prototype.getWallets =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet_service.CoreWalletService/GetWallets',
      request,
      metadata || {},
      methodDescriptor_CoreWalletService_GetWallets,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.wallet_service.WalletListResponse>}
 *     Promise that resolves to the response
 */
proto.wallet_service.CoreWalletServicePromiseClient.prototype.getWallets =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet_service.CoreWalletService/GetWallets',
      request,
      metadata || {},
      methodDescriptor_CoreWalletService_GetWallets);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.wallet_service.RemoveWalletRequest,
 *   !proto.result.Response>}
 */
const methodDescriptor_CoreWalletService_RemoveWallet = new grpc.web.MethodDescriptor(
  '/wallet_service.CoreWalletService/RemoveWallet',
  grpc.web.MethodType.UNARY,
  proto.wallet_service.RemoveWalletRequest,
  result_pb.Response,
  /**
   * @param {!proto.wallet_service.RemoveWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  result_pb.Response.deserializeBinary
);


/**
 * @param {!proto.wallet_service.RemoveWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.result.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.result.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.wallet_service.CoreWalletServiceClient.prototype.removeWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/wallet_service.CoreWalletService/RemoveWallet',
      request,
      metadata || {},
      methodDescriptor_CoreWalletService_RemoveWallet,
      callback);
};


/**
 * @param {!proto.wallet_service.RemoveWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.result.Response>}
 *     Promise that resolves to the response
 */
proto.wallet_service.CoreWalletServicePromiseClient.prototype.removeWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/wallet_service.CoreWalletService/RemoveWallet',
      request,
      metadata || {},
      methodDescriptor_CoreWalletService_RemoveWallet);
};


module.exports = proto.wallet_service;

